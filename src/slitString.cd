#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX_LIMIT 1024
int i;
int argc = 0;
char *argv[1600];
char command[MAX_LIMIT];
char *token;
char helpMessage[] = "\nPlease enter one of the following commands\n \
                    create-db [database] --creates a new database\n \
                    help -- show this help menu\n \
                    quit -- quit the program\n";
int main()
{
    printf("%s", helpMessage);
    do
    {
        fgets(command, MAX_LIMIT, stdin);
        // fscanf("%[^\n]%*c", command);
        // gets(command);
        token = strtok(command, " ");
        i = 1;
        while (token != NULL)
        {
            argv[i] = token;
            printf("%s", argv[i]);
            token = strtok(NULL, " ");
            i++;
        }
        argc = i;
        if (argc == 2)
        {
            if (strcmp(argv[1], "help\n") == 0)
            {
                printf(argv[1]);
                printf("%s", helpMessage);
            }
            else if (strcmp(argv[1], "quit\n") == 0)
            {
                printf("Exiting...\n");
                exit(0);
            }
        }

        // if (argc == 3)
        // {
        //     if (strcmp(argv[1], "create-db") == 0)
        //     {
        //         create_db(con, argv[2]);
        //     }
        // }
        // if (argc == 5)
        // {
        //     if ((strcmp(argv[1], "create-table") == 0) && (strcmp(argv[3], "-d") == 0))
        //     {
        //         create_table(con, argv[2], argv[4]);
        //     }
        // }

        // if (argc == 6)
        // {
        //     if ((strcmp(argv[1], "create-table") == 0) && (strcmp(argv[3], "-d") == 0))
        //     {
        //         read_qrs_line(con, argv[2], argv[4], argv[5]);
        //     }

        //     if ((strcmp(argv[1], "retrieve-data") == 0) && (strcmp(argv[2], "-d") == 0) && (strcmp(argv[4], "-t") == 0))
        //     {
        //         retieve_data_to_excel_file(con, argv[5], argv[3]);
        //     }
        // }
    } while (1);

    return 0;
}
